#include <iostream>
#include <vector>

using namespace std;

// Function to find the number of ways to make the sum
int countWaysToMakeSum(vector<int>& coins, int N, int sum) {
    // DP array to store the number of ways to make each sum
    vector<int> dp(sum + 1, 0);

    // There is one way to make sum 0 (by using no coins)
    dp[0] = 1;

    // Iterate over all coins
    for (int i = 0; i < N; i++) {
        // Update dp[] for all values greater than or equal to the coin's value
        for (int j = coins[i]; j <= sum; j++) {
            dp[j] += dp[j - coins[i]];
        }
    }

    // The answer will be dp[sum]
    return dp[sum];
}

int main() {
    int N, sum;
    
    // Input number of coins and the sum
    cout << "Enter the number of coins: ";
    cin >> N;
    
    vector<int> coins(N);
    
    cout << "Enter the coin denominations: ";
    for (int i = 0; i < N; i++) {
        cin >> coins[i];
    }
    
    cout << "Enter the sum: ";
    cin >> sum;

    // Call the function and print the result
    int result = countWaysToMakeSum(coins, N, sum);
    cout << "Number of ways to make sum " << sum << ": " << result << endl;

    return 0;
}
